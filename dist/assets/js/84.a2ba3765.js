(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{548:function(t,e,s){"use strict";s.r(e);var i=s(56),r=Object(i.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"settimeout-vs-setinterval"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-vs-setinterval"}},[this._v("#")]),this._v(" setTimeout vs setInterval")]),this._v(" "),e("ol",[e("li",[this._v("定时器setTimeout创建后返回一个定时器编号ID。由于共用编号池使得每次setTimeout返回的ID不同，因此递归中clearTimeout最后执行的话仅能保证释放最后一次创建的定时器。")]),this._v(" "),e("li",[this._v("之前生成的定时器虽然执行完毕但是根据垃圾回收机制执行时机的不确定性，很有可能内存一直有一堆未释放的计时器占用，所以需要每次创建前及时释放前一个已完成的计时器。")])])])}),[],!1,null,null,null);e.default=r.exports}}]);