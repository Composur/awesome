(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{436:function(n,o,e){"use strict";e.r(o);var t=e(43),r=Object(t.a)({},(function(){var n=this.$createElement,o=this._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[o("h3",{attrs:{id:"javascript原型到原型链"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#javascript原型到原型链"}},[this._v("#")]),this._v(" JavaScript原型到原型链")]),this._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[this._v("var log=console.log.bind(console)\nfunction Person(){ //创建一个构造函数\n\n}\n\nvar person1=new Person() //构造一个实例对象person1\n\nperson1.name='张三'\n\nlog(person1.name)\n\n\n// 每个函数都有一个prototype属性，这是函数特有的属性\n\nPerson.prototype.name='李四'\n\nvar person2=new Person()\n\nlog(person2.name) //李四\n\nperson2.name='张三'\nlog(person2.name)//张三\ndelete person2.name\nlog(person2.name) //李四\n\nlog(person1.__proto__===Person.prototype)//true\nlog(person2.__proto__===Person.prototype)//true\n\n// constructor\n\nlog(Person===person1.constructor)//true\nlog(Person===person2.constructor)//true\nlog(Person.prototype.constructor===person2.constructor)//true\n\n\nvar obj=new Object()\nlog(Object.prototype.__proto__)//null\n\n\n")])])])])}),[],!1,null,null,null);o.default=r.exports}}]);