(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{452:function(t,s,e){t.exports=e.p+"assets/img/react-life.ed371015.png"},537:function(t,s,e){"use strict";e.r(s);var a=e(56),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:e(452),alt:""}})]),t._v(" "),a("h2",{attrs:{id:"首次生命周期函数调用顺序如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首次生命周期函数调用顺序如下"}},[t._v("#")]),t._v(" 首次生命周期函数调用顺序如下")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("constructor")]),t._v(" "),a("ul",[a("li",[t._v("初始化，组件状态")]),t._v(" "),a("li",[t._v("唯一可以直接修改 state 的地方")])])]),t._v(" "),a("li",[a("code",[t._v("getDerivedStateFromProps")]),t._v(" 用来替换 "),a("code",[t._v("componentWillReceiveProps")]),t._v(" "),a("ul",[a("li",[t._v("用外部的属性来初始化内部的状态")]),t._v(" "),a("li",[t._v("当 state 需要从 props 初始化时使用")]),t._v(" "),a("li",[t._v("每次（父组件也会引起子组件） render 都会调用\n"),a("ul",[a("li",[a("strong",[t._v("无论父组件传递的props是否发生变化都会经过 componentWillReceiveProps 函数")])])])]),t._v(" "),a("li",[t._v("使用不当，易产生 bug")])])]),t._v(" "),a("li",[a("code",[t._v("~~componentWillMount/UNSAVE_componentWillMount~~")]),t._v("\n+ "),a("code",[t._v("render")]),t._v("之前调用，在此声明周期中使用 "),a("code",[t._v("setState")]),t._v(" 不会触发额外渲染，因为你不可能在创建期实现把数据渲染出来。只能在 "),a("code",[t._v("componentDidMount")]),t._v(" 中使用 "),a("code",[t._v("setState")]),t._v(" 把数据塞回去，通过更新界面来展示数据。")]),t._v(" "),a("li",[a("code",[t._v("render")]),t._v(" "),a("ul",[a("li",[t._v("必须定义，UI 渲染")])])]),t._v(" "),a("li",[a("code",[t._v("componentDidMount(第一次render之后执行)")]),t._v(" "),a("ul",[a("li",[t._v("获取外部资源，只执行一次。")])])])]),t._v(" "),a("h3",{attrs:{id:"当组件的-props-或-state-发生变化时会触发更新。组件更新的生命周期调用顺序如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当组件的-props-或-state-发生变化时会触发更新。组件更新的生命周期调用顺序如下"}},[t._v("#")]),t._v(" 当组件的 "),a("code",[t._v("props")]),t._v(" 或 "),a("code",[t._v("state")]),t._v(" 发生变化时会触发更新。组件更新的生命周期调用顺序如下：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("static getDerivedStateFromProps()")])]),t._v(" "),a("li",[a("code",[t._v("shouldComponentUpdate()")]),t._v(" "),a("ul",[a("li",[t._v("用户可以介入，性能优化的过程。组件是否更新。")]),t._v(" "),a("li",[t._v("一般由 PureComponent 自动实现")])])]),t._v(" "),a("li",[a("code",[t._v("render()")])]),t._v(" "),a("li",[a("code",[t._v("getSnapshotBeforeUpdate()")]),t._v(" 用来替换 "),a("code",[t._v("componentWillUpdate")]),t._v(" "),a("ul",[a("li",[t._v("页面更新前调用，"),a("code",[t._v("state")]),t._v(" 已更新")]),t._v(" "),a("li",[t._v("可用来获取 "),a("code",[t._v("render")]),t._v(" 前最新的 "),a("code",[t._v("DOM")]),t._v(" 数据")])])]),t._v(" "),a("li",[a("code",[t._v("componentDidUpdate()")]),t._v(" "),a("ul",[a("li",[t._v("每次更新都会调用")])])])]),t._v(" "),a("h3",{attrs:{id:"卸载-当组件从-dom中移除时会调用如下方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卸载-当组件从-dom中移除时会调用如下方法"}},[t._v("#")]),t._v(" 卸载 当组件从 "),a("code",[t._v("DOM")]),t._v("中移除时会调用如下方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("componentWillUnmount()")])])]),t._v(" "),a("h3",{attrs:{id:"有哪些生命周期被舍弃-3个-哪些生命周期是新增-2个"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有哪些生命周期被舍弃-3个-哪些生命周期是新增-2个"}},[t._v("#")]),t._v(" 有哪些⽣命周期被舍弃（3个），哪些⽣命周期是新增（2个）？")]),t._v(" "),a("ul",[a("li",[t._v("舍弃\n"),a("ul",[a("li",[a("code",[t._v("~~componentWillMount~~")])]),t._v(" "),a("li",[a("code",[t._v("~~componentWillReceivePorps~~")])]),t._v(" "),a("li",[a("code",[t._v("~~componentWillUpdate~~")])])])]),t._v(" "),a("li",[t._v("新增\n"),a("ul",[a("li",[a("code",[t._v("getDerivedStateFromProps")]),t._v(" （可以用来替换"),a("code",[t._v("componentWillReceiveProps()")]),t._v("）")]),t._v(" "),a("li",[t._v("根据"),a("code",[t._v("props")]),t._v("更新"),a("code",[t._v("state")]),t._v("上的"),a("code",[t._v("meuns")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个方法已经不建议使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillReceiveProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("menus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("menus\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("替代方法")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("menus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" prevState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("menus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 额外写一个newMeuns state来记录上一个props，在组件渲染的时候传入这个更新后的newMeuns")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("newMenus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("menus\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不更新state")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("getSnapshotBeforeUpdate()")]),t._v(" （在最近一次渲染输出（提交到 "),a("code",[t._v("DOM")]),t._v(" 节点）之前，"),a("code",[t._v("render")]),t._v("之后调用）")])])])]),t._v(" "),a("h3",{attrs:{id:"这些生命周期被舍弃或新增的原因-以及新增生命周期的参数和作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#这些生命周期被舍弃或新增的原因-以及新增生命周期的参数和作用"}},[t._v("#")]),t._v(" 这些⽣命周期被舍弃或新增的原因？以及新增⽣命周期的参数和作⽤？")]),t._v(" "),a("ol",[a("li",[t._v("会导致组件不必要的更新，父组件渲染即使没有改变"),a("code",[t._v("props")]),t._v(" 也会调用"),a("code",[t._v("componentWillReceivePorps")])]),t._v(" "),a("li",[t._v("异步渲染时间长会导致"),a("code",[t._v("componentWillUpdate、componentDidUpdate")]),t._v("之间的时间变长，这个过程中可能发生一些变化，比如用户行为导致 DOM 发生了新的变化，这时在 "),a("code",[t._v("componentWillUpdate")]),t._v("获取的信息可能就不可靠了")]),t._v(" "),a("li",[t._v("作用"),a("code",[t._v("static getDerivedStateFromProps(nextProps, prevState)")]),t._v("接收两个参数（它内部你只能访问到组件上的这两个参数），第一个为接收到的新参数，第二是是当前的"),a("code",[t._v("state")]),t._v("。会返回一个对象用来更新"),a("code",[t._v("state")]),t._v("不需要可以返回"),a("code",[t._v("null")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hehe")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("isRight")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("xxx")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("xxx\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("prevState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("isRight")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"react几个版本-1-6-3、1-6-4、1-7-0-对生命周期的相关处理和规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react几个版本-1-6-3、1-6-4、1-7-0-对生命周期的相关处理和规划"}},[t._v("#")]),t._v(" "),a("code",[t._v("React")]),t._v("⼏个版本（1.6.3、1.6.4、1.7.0）对⽣命周期的相关处理和规划?")]),t._v(" "),a("ol",[a("li",[t._v("1.6.3 新旧可以混用。")]),t._v(" "),a("li",[t._v("1.6.4 使用旧生命周期，开发者模式下会有警号")]),t._v(" "),a("li",[t._v("1.7.0 移除旧的生命周期")])]),t._v(" "),a("h3",{attrs:{id:"为什么要把getderivedstatefromprops设计为静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要把getderivedstatefromprops设计为静态方法"}},[t._v("#")]),t._v(" 为什么要把"),a("code",[t._v("getDerivedStateFromProps")]),t._v("设计为静态⽅法？")]),t._v(" "),a("ol",[a("li",[t._v("内部不能拿到 "),a("code",[t._v("this")]),t._v("，比较纯粹，不能用 "),a("code",[t._v("setState()")]),t._v(",会在 "),a("code",[t._v("render")]),t._v(" 方法之前被调用")])]),t._v(" "),a("h3",{attrs:{id:"getderivedstatefromprops被触发执行的条件有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getderivedstatefromprops被触发执行的条件有哪些"}},[t._v("#")]),t._v(" "),a("code",[t._v("getDerivedStateFromProps")]),t._v("被触发执⾏的条件有哪些？")]),t._v(" "),a("ul",[a("li",[t._v("组件挂载的时候")]),t._v(" "),a("li",[t._v("接收到新的"),a("code",[t._v("props")]),t._v("时")]),t._v(" "),a("li",[t._v("组件卸载时")]),t._v(" "),a("li",[t._v("父组件更新")]),t._v(" "),a("li",[t._v("内部组件执行了"),a("code",[t._v("state")]),t._v("\n可以总结为一句话，此静态方法会在"),a("code",[t._v("render")]),t._v("之前被调用，在初始挂载以及后续更新的时候都会被调用。")])]),t._v(" "),a("h3",{attrs:{id:"derived-state的定义是-如何理解derived-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#derived-state的定义是-如何理解derived-state"}},[t._v("#")]),t._v(" "),a("code",[t._v("Derived state")]),t._v("的定义是？（如何理解"),a("code",[t._v("derived state")]),t._v("?）")]),t._v(" "),a("p",[t._v("派生一个state，根据传入的props进行state的更新")]),t._v(" "),a("h3",{attrs:{id:"_1-6-2及其以前升级到1-6-4的方案是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-2及其以前升级到1-6-4的方案是"}},[t._v("#")]),t._v(" 1.6.2及其以前升级到1.6.4的⽅案是？")]),t._v(" "),a("blockquote",[a("p",[t._v("虽然废弃了这三个生命周期方法，但是为了向下兼容，将会做渐进式调整。\nV16.3 并未删除这三个生命周期，同时还为它们新增以 UNSAFE_ 前缀为别名的三个函数 UNSAFE_componentWillMount()、UNSAFE_componentWillReceiveProps()、UNSAFE_componentWillUpdate()。\n在 16.4 版本给出警告将会弃用 componentWillMount()、componentWillReceiveProps()、componentWillUpdate() 三个函数")])]),t._v(" "),a("h3",{attrs:{id:"_1-6-x升级到1-7的方案是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-x升级到1-7的方案是"}},[t._v("#")]),t._v(" 1.6.x升级到1.7的⽅案是？")]),t._v(" "),a("ul",[a("li",[t._v("在 17 版本将会删除 componentWillMount()、componentWillReceiveProps()、componentWillUpdate() 这三个函数，会保留使用 UNSAFE_componentWillMount()、UNSAFE_componentWillReceiveProps()、UNSAFE_componentWillUpdate()")]),t._v(" "),a("li",[t._v("使用 react-lifecycles-compat polyfill")])]),t._v(" "),a("h3",{attrs:{id:"生命周期的三个阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期的三个阶段"}},[t._v("#")]),t._v(" 生命周期的三个阶段")]),t._v(" "),a("ul",[a("li",[t._v("创建期")]),t._v(" "),a("li",[t._v("存活期")]),t._v(" "),a("li",[t._v("清理期")])]),t._v(" "),a("h4",{attrs:{id:"创建期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建期"}},[t._v("#")]),t._v(" 创建期")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Com "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./my-component'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ParentComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Com")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("父组件的 "),a("code",[t._v("render")]),t._v(" 方法执行的时候会实例化子组件 "),a("code",[t._v("<Com/>")]),t._v(" ，当真正的 "),a("code",[t._v("DOM")]),t._v(" 渲染之后，子组件的"),a("code",[t._v("componentDidMount")]),t._v(" 函数会比父组件的更早执行。")]),t._v(" "),a("h4",{attrs:{id:"存活期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存活期"}},[t._v("#")]),t._v(" 存活期")]),t._v(" "),a("p",[t._v("创建期过去之后，创建期函数不会再被调用。"),a("code",[t._v("componentDidMount")]),t._v(" 函数是在 "),a("code",[t._v("DOM")]),t._v(" 被渲染出来之后执行的，"),a("code",[t._v("componentDidMount")]),t._v(" 中的某些操作将常驻内存，比如绑定了事件，还有一些操作可以带来界面的更新，即在 "),a("code",[t._v("componentDidMount")]),t._v(" 中调用 "),a("code",[t._v("this.setState")]),t._v(" 。")]),t._v(" "),a("p",[t._v("进入存活期就存在组件更新的情况，组件有三中更新的方式：")]),t._v(" "),a("ul",[a("li",[t._v("自己调用 "),a("code",[t._v("this.setState()")])]),t._v(" "),a("li",[t._v("自己调用 "),a("code",[t._v("this.forceUpdate()")])]),t._v(" "),a("li",[t._v("父组件更新\n"),a("ul",[a("li",[t._v("父组件调用 "),a("code",[t._v("this.setState")]),t._v(" 或 "),a("code",[t._v("this.forceUpdate")]),t._v(" 或祖组件更新带来的 "),a("code",[t._v("props")]),t._v(" 更改）时导致自己的 "),a("code",[t._v("props")]),t._v(" 被更改。")])])])]),t._v(" "),a("h4",{attrs:{id:"存活期组件更新的要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存活期组件更新的要点"}},[t._v("#")]),t._v(" 存活期组件更新的要点")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("setState")]),t._v(" 是异步的")]),t._v(" "),a("li",[t._v("父组件异步加载数据")])])])}),[],!1,null,null,null);s.default=n.exports}}]);